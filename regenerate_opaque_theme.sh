#!/bin/bash

themes="/home/erinn/go/src/git.openprivacy.ca/openprivacy/opaque/theme"
outfile="./lib/opaque.dart"

if [ -e "$outfile" ]; then
  mv "$outfile" "${outfile}.bak"
fi

echo "// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT BY HAND AS CHANGES WILL BE OVERRIDDEN." > "$outfile"
echo "// TO EDIT THE THEME, SEE https://git.openprivacy.ca/openprivacy/opaque/" >> "$outfile"
echo "// FOR HOW THIS FILE IS GENERATED, SEE ../regenerate_opaque_theme.sh" >> "$outfile"

sed 's/import QtQuick 2\.0//g' "${themes}/ThemeType.qml"  | \
  sed "s/QtObject ./import 'dart:ui\';\nimport 'dart:core';\nabstract class OpaqueThemeType {\n    static final Color red = Color(0xFFFF0000);/g" | \
  sed 's/\(property color\|var\)/Color/g' | \
  sed 's/\(:\| =\) ".*"/(){return red;}/g' >> "$outfile"

echo -e "\n\n" >> "$outfile"

sed 's/ThemeType/class CwtchDark extends OpaqueThemeType/g' "${themes}/CwtchDark.qml" | \
  sed 's/readonly property color \(.*\): "#\(\w*\)"/static final Color \1 = Color(0xFF\2);/g' | \
  sed 's/\(\w*\): \(\w*\)/Color \1() { return \2; }/g' >> "$outfile"

echo -e "\n\n" >> "$outfile"

sed 's/ThemeType/class CwtchLight extends OpaqueThemeType/g' "${themes}/CwtchLight.qml" | \
  sed 's/readonly property color \(.*\): "#\(\w*\)"/static final Color \1 = Color(0xFF\2);/g' | \
  sed 's/\(\w*\): \(\w*\)/Color \1() { return \2; }/g' >> "$outfile"

echo -e "\n\n" >> "$outfile"

sed 's/\(pragma Singleton\|import QtQuick 2\.0\)//g' "${themes}/Theme.qml" | \
  sed 's|//.*$||g' | \
  sed 's/theme\./current./g' | \
  sed 's/property color/property Color/g' | \
  sed 's/readonly property Color \(.*\): \([a-zA-Z0-9._]*\)/Color \1() { return \2(); }/g' | \
  #to preserve int values: #static int \1() { return \2; }/g' | \
  sed 's/readonly property int \(.*\): \(.*\)/int \1() { return \2; }/g' | \
  sed 's/readonly property variant \([a-zA-Z0-9._]*\): \(.*\)$/var \1 = \2;/g' | \
  sed 's/color/Color/g' | \
  sed 's/: \(.+\)/ = \1;/g' | \
  sed 's/property ThemeType \(\w*\): \(.*\)../static final OpaqueThemeType \1 = \2();/g' | \
  sed 's/final OpaqueThemeType theme = .*$/Opaque current() { return dark; }/' | \
  sed 's/^.*themeScaleNew.*$/int scale = 2;\n    static final String gcdOS = "linux";/g' | \
  sed 's/gcd.os/gcdOS/g' | \
  sed 's/return \([a-zA-Z]\+\) ;/return \1();/g' | \
  sed 's/return \([a-zA-Z]\+\) + \([a-zA-Z]\+\);/return \1() + \2();/g' | \
  sed 's/Item/class Opaque extends OpaqueThemeType/' | \
  sed 's/current\./current()./g' >> "$outfile"
